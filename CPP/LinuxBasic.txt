
*********************************  Linux File and Management  **************************
ls:
	ls [-aAdfFhilnrRSt]
	ls [--color={never,auto,always}]
	ls [--full-time]
cp:
	cp [-adfilprsu] sourc） destination
	cp [options] source1 source2 source3 .... directory # last file must be a directory
mv:	
	mv [-fiu] source destination
	mv [options] source1 source2 source3 .... directory
rm: rm [-fir]
basename  dirname 
cat [-AbEnTv]
tail -n num filename
more:
	<space>                 Display next k lines of text [current screen size]
	z                       Display next k lines of text [current screen size]*
	<return>                Display next k lines of text [1]*
	d or ctrl-D             Scroll k lines [current scroll size, initially 11]*
	q or Q or <interrupt>   Exit from more
	s                       Skip forward k lines of text [1]
	f                       Skip forward k screenfuls of text [1]
	b or ctrl-B             Skip backwards k screenfuls of text [1]
	'                       Go to place where previous search started
	=                       Display current line number
	/<regular expression>   Search for kth occurrence of regular expression [1]
	n                       Search for kth occurrence of last r.e [1]
	!<cmd> or :!<cmd>       Execute <cmd> in a subshell
	v                       Start up /usr/bin/vi at current line
	ctrl-L                  Redraw screen
	:n                      Go to kth next file [1]
	:p                      Go to kth previous file [1]
	:f                      Display current file name and line number
	.                       Repeat previous command
touch: # change time of file: modification time(mtime), access time(atime), status time(ctime)
	touch [-acdmt] file

which [-a] name 
	# search instruction by name
	# which: search file according to $PATH variable
whereis [-lbmsu] name 
	# search file by name
	# whereis: search file in specific pathes. /bin/sbin/  /usr/share/man
locate/updatedb [-iclSr] keyword
	# updatedb: search file according to /etc/updatedb.conf and update /var/lib/mlocation
	# locate: search file according to /var/lib/mlocate
	# find: search file within whole disk
	
*********************************  Linux File System  ***********************************
Superblock:
	the total amount of block and inode
	the number of inode/block that are not uesed and used
	size of block and inode
	system mount time, the last write time, check time(fsck) and other system information
	valid bit: 0(system has been mounted), 1(system is not mounted)
inode table:
inode:
	read and wirte mode(read/write/excute)
	file's owner and group(owner/group)
	file capacity
	ctime, atime, mtime
	flag(SetUID)
	pointer
block bitmap:
inode bitmap:
	
XFS File System:
	data section: inode/data block/superblock
	log section:  
	realtime section:

	df [-ahikHTm] name # list usage of file system
	du [-ahskm] name # evaluate the disk usage of file system
	xfs_info /dev/vda1

Hard, Symbolic Link:
	ln [-sf] source destination
	
Partition:
	lsblk [-dfimpt] [device] # list all disk lists on system
	blkid # list device UUID
	parted device_name print # list disk partition table type and partition info
	
	Wizard to part the bisk:
		1. use lsblk to find disk
		2. use pared /dev/xxx print get the partition table type
		3. use appropriate method (gdisk/fdisk) to part disk
		
*********************************  Process  *********************************************
ps -[a,A,N,e,H,au,aux,line<num>,width<num>]
ps [a,c,e,f,r,T,u]

grep [-acinrv] [--color=auto] '搜寻字符串' filename
*********************************  VIM  *************************************************
command mode:
	Cursor:
		ctrl + f # page down
		ctrl + b # page up
		0 and $ # to and curretn line head and real
		H # to the most left top head of the current screen
		M # to the middle line head of the current screen
		L # to the bottom line head of the current screen
		G # to the bottom of the file
		nG # to the n line of the file
		gg (1G) # to the first line of the file
		n<Enter> # down n line
	Search:
		/word # down search
		?word # up search
		n # key, repeat previous search, down
		N # key, repeat previous search, up
		: n1, n2s/word1/word2/g # search word1 and replace it with word2 between n1 and n2
		:1, $s/word1/word2/g # search word and replace between first line and last one
		:1, $s/word1/word2/gc # replace need c(confirm)
	delete, copy and past:
		x,X # backwords and forward delete
		nx # delete n characters backwords
		dd # delete current line
		d<n>G # delete line from curretn to <n> line
		dG # delete line from current to last
		d$, d0 # delete from cursor to last or first character of current line
		
		yy # copy current line
		nyy # copy n line down from current line
		y1G # copy from current line to first one
		yG # copy from current line to the last one
		y0 # copy from cursor to first character of this line
		y$ # copy from cursor to last charactter of this line
		
		p,P # past the data to the previous/next line
		J # combine the this lint with next line into one line
		c # repeat delete mutil data eg: 10cj
		u # undo previous operation
		ctrl + r # redo the previous operation
		. # repeat previous action
insert mode:
	ZZ # save if changes and quit
	:w[fileName] # save file with name
	:r[fileName] # read other file's date and append to cursor of this file
	:!command # 
	:n1,n2 w [file] # save data from n1 to n2 to file
Additional operation:
	visual Block:
		v # character selection, will pass the cursor through the place to choose
		V # line selection
		ctrl + v # visual block selection, can select column
		y # copy the visual block data
		d # delete the vidua block data
		p # append visual block data to the cursor
	multi file Edtion:
		:n # edit next file
		:N # edit previous file
		:file # show all files opened by vim
	multi windows:
		:sp [filename] #
		ctr + W + #
		ctr + w + q
	Automatic comletion:
		ctrl + x -> ctrl + n # completion based on content of this file
		ctrl + x -> ctrl + f # completion based on the file name of the file within this directory
		ctrl + x -> ctrl + o # completion based on the syntax of file suffix name 
command line mode:

Enviroment Setting:
	/etc/vimrc		~/.vimrc(no exsit by default)
	:set all
	:set # show the different setings with the default of system
	:set ruler # status instraction in right bottom corner
	:set backspace=(012)
	:set bg=dark/light # show different color tones

	
*********************************  Bash  ************************************************
history: ~/.bash_historys
type [tpa] name # check weather the instruction is built in or not
ctr + u/k # delete all input before/after cursor
ctr +a/e # move cursor to line head/rear
ctr + l # clean current screen
set variable:
	set name, unset name, export # make local variable to be global variable
enviroment variable:
	env #




*********************************  Linux File System  ***********************************

硬链接：
	文件有相同的 inode 及 data block；
	只能对已存在的文件进行创建；
	不能交叉文件系统进行硬链接的创建；
	不能对目录进行创建，只可对文件创建；
	删除一个硬链接文件并不影响其他有相同 inode 号的文件。
软链接：
	软链接有自己的文件属性及权限等；
	可对不存在的文件或目录创建软链接；
	软链接可交叉文件系统；
	软链接可对文件或目录创建；
	创建软链接时，链接计数 i_nlink 不会增加；
	删除软链接并不影响被指向的文件，但若被指向的原文件被删除，则相关软连接被称为
		死链接（即 dangling link，若被指向路径文件被重新创建，死链接可恢复为正常的软链接）。

	
crontab:
	/etc/cron.deny  # user in this file don't allow use crontab
	/etc/cron.allow
	/var/spool/cron/  # all user's crontab file reserved here and named with user name
	
	/sbin/service cron [start, stop, restart, reload, status]
	
	
File System:
	chgrp [-R] dirname/filename...
	chown [-R] owner:group dir/file
	chmod [-R] xyz dir/file
	chmod | u g o a | + - = | r w x | dir or file |

	mkdir[-mp] # m: 
	rmdir [-P] # P, remove current directory and it's parent and empty directory
	rm [-r] # delete all file include it's children
	pwd [-P] # show real path(linked file)


rpm:
	QUERYING AND VERIFYING PACKAGES:
		rpm {-q|--query} [select-options] [query-options]
		rpm {-V|--verify} [select-options] [verify-options]
		rpm --import PUBKEY ...
		rpm {-K|--checksig} [--nosignature] [--nodigest] PACKAGE_FILE ...
	INSTALLING, UPGRADING, AND REMOVING PACKAGES:
		rpm {-i|--install} [install-options] PACKAGE_FILE ...
		rpm {-U|--upgrade} [install-options] PACKAGE_FILE ...
		rpm {-F|--freshen} [install-options] PACKAGE_FILE ...
		rpm {-e|--erase} [--allmatches] [--nodeps] [--noscripts] 
		[--notriggers] [--repackage] [--test] PACKAGE_NAME ...
	MISCELLANEOUS:
		rpm {--initdb|--rebuilddb}
		rpm {--addsign|--resign} PACKAGE_FILE ...
		rpm {--querytags|--showrc}
		rpm {--setperms|--setugids} PACKAGE_NAME ...

	select-options
	 
	[PACKAGE_NAME] [-a,--all] [-f,--file FILE] 
	[-g,--group GROUP] {-p,--package PACKAGE_FILE] 
	[--fileid MD5] [--hdrid SHA1] [--pkgid MD5] [--tid TID] 
	[--querybynumber HDRNUM] [--triggeredby PACKAGE_NAME] 
	[--whatprovides CAPABILITY] [--whatrequires CAPABILITY]

	query-options
	[--changelog] [-c,--configfiles] [-d,--docfiles] [--dump] 
	[--filesbypkg] [-i,--info] [--last] [-l,--list] 
	[--provides] [--qf,--queryformat QUERYFMT] 
	[-R,--requires] [--scripts] [-s,--state] 
	[--triggers,--triggerscripts]

	verify-options
	[--nodeps] [--nofiles] [--noscripts] 
	[--nodigest] [--nosignature] 
	[--nolinkto] [--nomd5] [--nosize] [--nouser] 
	[--nogroup] [--nomtime] [--nomode] [--nordev]

	install-options
	[--aid] [--allfiles] [--badreloc] [--excludepath OLDPATH] 
	[--excludedocs] [--force] [-h,--hash] 
	[--ignoresize] [--ignorearch] [--ignoreos] 
	[--includedocs] [--justdb] [--nodeps] 
	[--nodigest] [--nosignature] [--nosuggest] 
	[--noorder] [--noscripts] [--notriggers] 
	[--oldpackage] [--percent] [--prefix NEWPATH] 
	[--relocate OLDPATH=NEWPATH] 
	[--repackage] [--replacefiles] [--replacepkgs] 
	[--test]	
	
aptitude:
	aptitude 与 apt-get 一样，是 Debian 及其衍生系统中功能极其强大的包管理工具。
	与 apt-get 不同的是，aptitude 在处理依赖问题上更佳一些。
	举例来说，aptitude 在删除一个包时，会同时删除本身所依赖的包。
	这样，系统中不会残留无用的包，整个系统更为干净。以下是笔者总结的一些常用 aptitude 命令，仅供参考。
	命令	作用
	aptitude update	更新可用的包列表
	aptitude upgrade	升级可用的包
	aptitude dist-upgrade	将系统升级到新的发行版
	aptitude install pkgname	安装包
	aptitude remove pkgname	删除包
	aptitude purge pkgname	删除包及其配置文件
	aptitude search string	搜索包
	aptitude show pkgname	显示包的详细信息
	aptitude clean	删除下载的包文件
	aptitude autoclean	仅删除过期的包文件
